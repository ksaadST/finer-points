buildscript {
    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'
apply plugin: 'war'


war {
    baseName = 'FinerPoints'
    version =  '0.1.0'
}


configurations {
    providedRuntime
}

group = 'tarehart'

jar {
    baseName = 'node-stand'
    version =  '0.1.0'
}

run {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=5005,suspend=n']
}

bootRun {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=5005,suspend=n']
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
    maven { url "http://m2.neo4j.org" }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url "http://repo.spring.io/libs-snapshot" }
    maven { url "http://m2.neo4j.org/content/repositories/snapshots"}
}

dependencies {
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.social:spring-social-google:1.0.0.RELEASE")
    compile("org.springframework:spring-jdbc") // Possibly unnecessary
    compile("org.springframework:spring-context")
    compile("org.springframework:spring-tx")
    compile("org.springframework.data:spring-data-neo4j:4.1.0.BUILD-SNAPSHOT")
    compile("org.springframework:spring-webmvc")
    compile("joda-time:joda-time:2.8.1")

    testCompile("junit:junit")
    testCompile(group: 'org.neo4j', name: 'neo4j-ogm', version: '1.1.5-SNAPSHOT', classifier: 'tests')
    testCompile(group: 'org.neo4j.test', name: 'neo4j-harness', version: '2.3.1')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}